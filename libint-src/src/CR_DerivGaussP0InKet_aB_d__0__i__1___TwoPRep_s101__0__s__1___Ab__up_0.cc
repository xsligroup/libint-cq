/*
 *  Copyright (C) 2004-2020 Edward F. Valeev
 *
 *  This file is part of Libint.
 *
 *  Libint is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU Lesser General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  Libint is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with Libint.  If not, see <http://www.gnu.org/licenses/>.
 *
 */

#include <libint2.h>

#ifdef __cplusplus
LIBINT_PRAGMA_CLANG(diagnostic push)
LIBINT_PRAGMA_CLANG(diagnostic ignored "-Wunused-variable")
LIBINT_PRAGMA_GCC(diagnostic push)
LIBINT_PRAGMA_GCC(diagnostic ignored "-Wunused-variable")
extern "C" {
#endif
void CR_DerivGaussP0InKet_aB_d__0__i__1___TwoPRep_s101__0__s__1___Ab__up_0(const Libint_t* inteval, LIBINT2_REALTYPE* target, const LIBINT2_REALTYPE* src0) {

LIBINT2_REALTYPE*const  stack = target;
{
const int hsi = 0;
{
const int lsi = 0;
{
const int vi = 0;
LIBINT2_REALTYPE fp105;
fp105 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+230)*1+lsi)*1];
target[((hsi*168+62)*1+lsi)*1] = fp105;
LIBINT2_REALTYPE fp106;
fp106 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+229)*1+lsi)*1];
target[((hsi*168+61)*1+lsi)*1] = fp106;
LIBINT2_REALTYPE fp107;
fp107 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+228)*1+lsi)*1];
target[((hsi*168+60)*1+lsi)*1] = fp107;
LIBINT2_REALTYPE fp108;
fp108 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+227)*1+lsi)*1];
target[((hsi*168+59)*1+lsi)*1] = fp108;
LIBINT2_REALTYPE fp109;
fp109 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+226)*1+lsi)*1];
target[((hsi*168+58)*1+lsi)*1] = fp109;
LIBINT2_REALTYPE fp110;
fp110 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+225)*1+lsi)*1];
target[((hsi*168+57)*1+lsi)*1] = fp110;
LIBINT2_REALTYPE fp111;
fp111 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+224)*1+lsi)*1];
target[((hsi*168+56)*1+lsi)*1] = fp111;
LIBINT2_REALTYPE fp112;
fp112 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+167)*1+lsi)*1];
target[((hsi*168+55)*1+lsi)*1] = fp112;
LIBINT2_REALTYPE fp113;
fp113 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+166)*1+lsi)*1];
target[((hsi*168+54)*1+lsi)*1] = fp113;
LIBINT2_REALTYPE fp167;
fp167 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+56)*1+lsi)*1];
target[((hsi*168+0)*1+lsi)*1] = fp167;
LIBINT2_REALTYPE fp115;
fp115 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+164)*1+lsi)*1];
target[((hsi*168+52)*1+lsi)*1] = fp115;
LIBINT2_REALTYPE fp116;
fp116 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+163)*1+lsi)*1];
target[((hsi*168+51)*1+lsi)*1] = fp116;
LIBINT2_REALTYPE fp117;
fp117 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+162)*1+lsi)*1];
target[((hsi*168+50)*1+lsi)*1] = fp117;
LIBINT2_REALTYPE fp118;
fp118 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+161)*1+lsi)*1];
target[((hsi*168+49)*1+lsi)*1] = fp118;
LIBINT2_REALTYPE fp119;
fp119 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+160)*1+lsi)*1];
target[((hsi*168+48)*1+lsi)*1] = fp119;
LIBINT2_REALTYPE fp120;
fp120 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+159)*1+lsi)*1];
target[((hsi*168+47)*1+lsi)*1] = fp120;
LIBINT2_REALTYPE fp121;
fp121 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+158)*1+lsi)*1];
target[((hsi*168+46)*1+lsi)*1] = fp121;
LIBINT2_REALTYPE fp122;
fp122 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+157)*1+lsi)*1];
target[((hsi*168+45)*1+lsi)*1] = fp122;
LIBINT2_REALTYPE fp123;
fp123 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+156)*1+lsi)*1];
target[((hsi*168+44)*1+lsi)*1] = fp123;
LIBINT2_REALTYPE fp124;
fp124 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+155)*1+lsi)*1];
target[((hsi*168+43)*1+lsi)*1] = fp124;
LIBINT2_REALTYPE fp114;
fp114 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+165)*1+lsi)*1];
target[((hsi*168+53)*1+lsi)*1] = fp114;
LIBINT2_REALTYPE fp84;
fp84 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+251)*1+lsi)*1];
target[((hsi*168+83)*1+lsi)*1] = fp84;
LIBINT2_REALTYPE fp85;
fp85 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+250)*1+lsi)*1];
target[((hsi*168+82)*1+lsi)*1] = fp85;
LIBINT2_REALTYPE fp86;
fp86 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+249)*1+lsi)*1];
target[((hsi*168+81)*1+lsi)*1] = fp86;
LIBINT2_REALTYPE fp87;
fp87 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+248)*1+lsi)*1];
target[((hsi*168+80)*1+lsi)*1] = fp87;
LIBINT2_REALTYPE fp88;
fp88 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+247)*1+lsi)*1];
target[((hsi*168+79)*1+lsi)*1] = fp88;
LIBINT2_REALTYPE fp89;
fp89 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+246)*1+lsi)*1];
target[((hsi*168+78)*1+lsi)*1] = fp89;
LIBINT2_REALTYPE fp90;
fp90 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+245)*1+lsi)*1];
target[((hsi*168+77)*1+lsi)*1] = fp90;
LIBINT2_REALTYPE fp91;
fp91 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+244)*1+lsi)*1];
target[((hsi*168+76)*1+lsi)*1] = fp91;
LIBINT2_REALTYPE fp92;
fp92 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+243)*1+lsi)*1];
target[((hsi*168+75)*1+lsi)*1] = fp92;
LIBINT2_REALTYPE fp104;
fp104 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+231)*1+lsi)*1];
target[((hsi*168+63)*1+lsi)*1] = fp104;
LIBINT2_REALTYPE fp94;
fp94 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+241)*1+lsi)*1];
target[((hsi*168+73)*1+lsi)*1] = fp94;
LIBINT2_REALTYPE fp95;
fp95 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+240)*1+lsi)*1];
target[((hsi*168+72)*1+lsi)*1] = fp95;
LIBINT2_REALTYPE fp96;
fp96 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+239)*1+lsi)*1];
target[((hsi*168+71)*1+lsi)*1] = fp96;
LIBINT2_REALTYPE fp97;
fp97 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+238)*1+lsi)*1];
target[((hsi*168+70)*1+lsi)*1] = fp97;
LIBINT2_REALTYPE fp98;
fp98 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+237)*1+lsi)*1];
target[((hsi*168+69)*1+lsi)*1] = fp98;
LIBINT2_REALTYPE fp99;
fp99 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+236)*1+lsi)*1];
target[((hsi*168+68)*1+lsi)*1] = fp99;
LIBINT2_REALTYPE fp100;
fp100 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+235)*1+lsi)*1];
target[((hsi*168+67)*1+lsi)*1] = fp100;
LIBINT2_REALTYPE fp101;
fp101 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+234)*1+lsi)*1];
target[((hsi*168+66)*1+lsi)*1] = fp101;
LIBINT2_REALTYPE fp102;
fp102 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+233)*1+lsi)*1];
target[((hsi*168+65)*1+lsi)*1] = fp102;
LIBINT2_REALTYPE fp103;
fp103 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+232)*1+lsi)*1];
target[((hsi*168+64)*1+lsi)*1] = fp103;
LIBINT2_REALTYPE fp93;
fp93 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+242)*1+lsi)*1];
target[((hsi*168+74)*1+lsi)*1] = fp93;
LIBINT2_REALTYPE fp147;
fp147 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+76)*1+lsi)*1];
target[((hsi*168+20)*1+lsi)*1] = fp147;
LIBINT2_REALTYPE fp148;
fp148 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+75)*1+lsi)*1];
target[((hsi*168+19)*1+lsi)*1] = fp148;
LIBINT2_REALTYPE fp149;
fp149 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+74)*1+lsi)*1];
target[((hsi*168+18)*1+lsi)*1] = fp149;
LIBINT2_REALTYPE fp150;
fp150 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+73)*1+lsi)*1];
target[((hsi*168+17)*1+lsi)*1] = fp150;
LIBINT2_REALTYPE fp151;
fp151 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+72)*1+lsi)*1];
target[((hsi*168+16)*1+lsi)*1] = fp151;
LIBINT2_REALTYPE fp152;
fp152 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+71)*1+lsi)*1];
target[((hsi*168+15)*1+lsi)*1] = fp152;
LIBINT2_REALTYPE fp153;
fp153 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+70)*1+lsi)*1];
target[((hsi*168+14)*1+lsi)*1] = fp153;
LIBINT2_REALTYPE fp154;
fp154 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+69)*1+lsi)*1];
target[((hsi*168+13)*1+lsi)*1] = fp154;
LIBINT2_REALTYPE fp155;
fp155 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+68)*1+lsi)*1];
target[((hsi*168+12)*1+lsi)*1] = fp155;
LIBINT2_REALTYPE fp125;
fp125 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+154)*1+lsi)*1];
target[((hsi*168+42)*1+lsi)*1] = fp125;
LIBINT2_REALTYPE fp157;
fp157 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+66)*1+lsi)*1];
target[((hsi*168+10)*1+lsi)*1] = fp157;
LIBINT2_REALTYPE fp158;
fp158 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+65)*1+lsi)*1];
target[((hsi*168+9)*1+lsi)*1] = fp158;
LIBINT2_REALTYPE fp159;
fp159 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+64)*1+lsi)*1];
target[((hsi*168+8)*1+lsi)*1] = fp159;
LIBINT2_REALTYPE fp160;
fp160 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+63)*1+lsi)*1];
target[((hsi*168+7)*1+lsi)*1] = fp160;
LIBINT2_REALTYPE fp161;
fp161 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+62)*1+lsi)*1];
target[((hsi*168+6)*1+lsi)*1] = fp161;
LIBINT2_REALTYPE fp162;
fp162 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+61)*1+lsi)*1];
target[((hsi*168+5)*1+lsi)*1] = fp162;
LIBINT2_REALTYPE fp163;
fp163 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+60)*1+lsi)*1];
target[((hsi*168+4)*1+lsi)*1] = fp163;
LIBINT2_REALTYPE fp164;
fp164 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+59)*1+lsi)*1];
target[((hsi*168+3)*1+lsi)*1] = fp164;
LIBINT2_REALTYPE fp165;
fp165 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+58)*1+lsi)*1];
target[((hsi*168+2)*1+lsi)*1] = fp165;
LIBINT2_REALTYPE fp166;
fp166 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+57)*1+lsi)*1];
target[((hsi*168+1)*1+lsi)*1] = fp166;
LIBINT2_REALTYPE fp156;
fp156 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+67)*1+lsi)*1];
target[((hsi*168+11)*1+lsi)*1] = fp156;
LIBINT2_REALTYPE fp126;
fp126 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+153)*1+lsi)*1];
target[((hsi*168+41)*1+lsi)*1] = fp126;
LIBINT2_REALTYPE fp127;
fp127 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+152)*1+lsi)*1];
target[((hsi*168+40)*1+lsi)*1] = fp127;
LIBINT2_REALTYPE fp128;
fp128 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+151)*1+lsi)*1];
target[((hsi*168+39)*1+lsi)*1] = fp128;
LIBINT2_REALTYPE fp129;
fp129 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+150)*1+lsi)*1];
target[((hsi*168+38)*1+lsi)*1] = fp129;
LIBINT2_REALTYPE fp130;
fp130 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+149)*1+lsi)*1];
target[((hsi*168+37)*1+lsi)*1] = fp130;
LIBINT2_REALTYPE fp131;
fp131 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+148)*1+lsi)*1];
target[((hsi*168+36)*1+lsi)*1] = fp131;
LIBINT2_REALTYPE fp132;
fp132 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+147)*1+lsi)*1];
target[((hsi*168+35)*1+lsi)*1] = fp132;
LIBINT2_REALTYPE fp133;
fp133 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+146)*1+lsi)*1];
target[((hsi*168+34)*1+lsi)*1] = fp133;
LIBINT2_REALTYPE fp134;
fp134 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+145)*1+lsi)*1];
target[((hsi*168+33)*1+lsi)*1] = fp134;
LIBINT2_REALTYPE fp146;
fp146 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+77)*1+lsi)*1];
target[((hsi*168+21)*1+lsi)*1] = fp146;
LIBINT2_REALTYPE fp136;
fp136 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+143)*1+lsi)*1];
target[((hsi*168+31)*1+lsi)*1] = fp136;
LIBINT2_REALTYPE fp137;
fp137 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+142)*1+lsi)*1];
target[((hsi*168+30)*1+lsi)*1] = fp137;
LIBINT2_REALTYPE fp138;
fp138 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+141)*1+lsi)*1];
target[((hsi*168+29)*1+lsi)*1] = fp138;
LIBINT2_REALTYPE fp139;
fp139 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+140)*1+lsi)*1];
target[((hsi*168+28)*1+lsi)*1] = fp139;
LIBINT2_REALTYPE fp140;
fp140 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+83)*1+lsi)*1];
target[((hsi*168+27)*1+lsi)*1] = fp140;
LIBINT2_REALTYPE fp141;
fp141 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+82)*1+lsi)*1];
target[((hsi*168+26)*1+lsi)*1] = fp141;
LIBINT2_REALTYPE fp142;
fp142 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+81)*1+lsi)*1];
target[((hsi*168+25)*1+lsi)*1] = fp142;
LIBINT2_REALTYPE fp143;
fp143 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+80)*1+lsi)*1];
target[((hsi*168+24)*1+lsi)*1] = fp143;
LIBINT2_REALTYPE fp144;
fp144 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+79)*1+lsi)*1];
target[((hsi*168+23)*1+lsi)*1] = fp144;
LIBINT2_REALTYPE fp145;
fp145 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+78)*1+lsi)*1];
target[((hsi*168+22)*1+lsi)*1] = fp145;
LIBINT2_REALTYPE fp135;
fp135 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+144)*1+lsi)*1];
target[((hsi*168+32)*1+lsi)*1] = fp135;
LIBINT2_REALTYPE fp21;
fp21 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+482)*1+lsi)*1];
target[((hsi*168+146)*1+lsi)*1] = fp21;
LIBINT2_REALTYPE fp22;
fp22 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+481)*1+lsi)*1];
target[((hsi*168+145)*1+lsi)*1] = fp22;
LIBINT2_REALTYPE fp23;
fp23 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+480)*1+lsi)*1];
target[((hsi*168+144)*1+lsi)*1] = fp23;
LIBINT2_REALTYPE fp24;
fp24 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+479)*1+lsi)*1];
target[((hsi*168+143)*1+lsi)*1] = fp24;
LIBINT2_REALTYPE fp25;
fp25 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+478)*1+lsi)*1];
target[((hsi*168+142)*1+lsi)*1] = fp25;
LIBINT2_REALTYPE fp26;
fp26 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+477)*1+lsi)*1];
target[((hsi*168+141)*1+lsi)*1] = fp26;
LIBINT2_REALTYPE fp27;
fp27 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+476)*1+lsi)*1];
target[((hsi*168+140)*1+lsi)*1] = fp27;
LIBINT2_REALTYPE fp28;
fp28 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+419)*1+lsi)*1];
target[((hsi*168+139)*1+lsi)*1] = fp28;
LIBINT2_REALTYPE fp29;
fp29 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+418)*1+lsi)*1];
target[((hsi*168+138)*1+lsi)*1] = fp29;
LIBINT2_REALTYPE fp83;
fp83 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+308)*1+lsi)*1];
target[((hsi*168+84)*1+lsi)*1] = fp83;
LIBINT2_REALTYPE fp31;
fp31 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+416)*1+lsi)*1];
target[((hsi*168+136)*1+lsi)*1] = fp31;
LIBINT2_REALTYPE fp32;
fp32 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+415)*1+lsi)*1];
target[((hsi*168+135)*1+lsi)*1] = fp32;
LIBINT2_REALTYPE fp33;
fp33 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+414)*1+lsi)*1];
target[((hsi*168+134)*1+lsi)*1] = fp33;
LIBINT2_REALTYPE fp34;
fp34 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+413)*1+lsi)*1];
target[((hsi*168+133)*1+lsi)*1] = fp34;
LIBINT2_REALTYPE fp35;
fp35 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+412)*1+lsi)*1];
target[((hsi*168+132)*1+lsi)*1] = fp35;
LIBINT2_REALTYPE fp36;
fp36 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+411)*1+lsi)*1];
target[((hsi*168+131)*1+lsi)*1] = fp36;
LIBINT2_REALTYPE fp37;
fp37 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+410)*1+lsi)*1];
target[((hsi*168+130)*1+lsi)*1] = fp37;
LIBINT2_REALTYPE fp38;
fp38 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+409)*1+lsi)*1];
target[((hsi*168+129)*1+lsi)*1] = fp38;
LIBINT2_REALTYPE fp39;
fp39 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+408)*1+lsi)*1];
target[((hsi*168+128)*1+lsi)*1] = fp39;
LIBINT2_REALTYPE fp40;
fp40 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+407)*1+lsi)*1];
target[((hsi*168+127)*1+lsi)*1] = fp40;
LIBINT2_REALTYPE fp30;
fp30 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+417)*1+lsi)*1];
target[((hsi*168+137)*1+lsi)*1] = fp30;
LIBINT2_REALTYPE fp0;
fp0 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+503)*1+lsi)*1];
target[((hsi*168+167)*1+lsi)*1] = fp0;
LIBINT2_REALTYPE fp1;
fp1 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+502)*1+lsi)*1];
target[((hsi*168+166)*1+lsi)*1] = fp1;
LIBINT2_REALTYPE fp2;
fp2 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+501)*1+lsi)*1];
target[((hsi*168+165)*1+lsi)*1] = fp2;
LIBINT2_REALTYPE fp3;
fp3 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+500)*1+lsi)*1];
target[((hsi*168+164)*1+lsi)*1] = fp3;
LIBINT2_REALTYPE fp4;
fp4 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+499)*1+lsi)*1];
target[((hsi*168+163)*1+lsi)*1] = fp4;
LIBINT2_REALTYPE fp5;
fp5 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+498)*1+lsi)*1];
target[((hsi*168+162)*1+lsi)*1] = fp5;
LIBINT2_REALTYPE fp6;
fp6 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+497)*1+lsi)*1];
target[((hsi*168+161)*1+lsi)*1] = fp6;
LIBINT2_REALTYPE fp7;
fp7 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+496)*1+lsi)*1];
target[((hsi*168+160)*1+lsi)*1] = fp7;
LIBINT2_REALTYPE fp8;
fp8 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+495)*1+lsi)*1];
target[((hsi*168+159)*1+lsi)*1] = fp8;
LIBINT2_REALTYPE fp20;
fp20 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+483)*1+lsi)*1];
target[((hsi*168+147)*1+lsi)*1] = fp20;
LIBINT2_REALTYPE fp10;
fp10 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+493)*1+lsi)*1];
target[((hsi*168+157)*1+lsi)*1] = fp10;
LIBINT2_REALTYPE fp11;
fp11 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+492)*1+lsi)*1];
target[((hsi*168+156)*1+lsi)*1] = fp11;
LIBINT2_REALTYPE fp12;
fp12 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+491)*1+lsi)*1];
target[((hsi*168+155)*1+lsi)*1] = fp12;
LIBINT2_REALTYPE fp13;
fp13 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+490)*1+lsi)*1];
target[((hsi*168+154)*1+lsi)*1] = fp13;
LIBINT2_REALTYPE fp14;
fp14 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+489)*1+lsi)*1];
target[((hsi*168+153)*1+lsi)*1] = fp14;
LIBINT2_REALTYPE fp15;
fp15 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+488)*1+lsi)*1];
target[((hsi*168+152)*1+lsi)*1] = fp15;
LIBINT2_REALTYPE fp16;
fp16 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+487)*1+lsi)*1];
target[((hsi*168+151)*1+lsi)*1] = fp16;
LIBINT2_REALTYPE fp17;
fp17 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+486)*1+lsi)*1];
target[((hsi*168+150)*1+lsi)*1] = fp17;
LIBINT2_REALTYPE fp18;
fp18 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+485)*1+lsi)*1];
target[((hsi*168+149)*1+lsi)*1] = fp18;
LIBINT2_REALTYPE fp19;
fp19 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+484)*1+lsi)*1];
target[((hsi*168+148)*1+lsi)*1] = fp19;
LIBINT2_REALTYPE fp9;
fp9 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+494)*1+lsi)*1];
target[((hsi*168+158)*1+lsi)*1] = fp9;
LIBINT2_REALTYPE fp63;
fp63 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+328)*1+lsi)*1];
target[((hsi*168+104)*1+lsi)*1] = fp63;
LIBINT2_REALTYPE fp64;
fp64 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+327)*1+lsi)*1];
target[((hsi*168+103)*1+lsi)*1] = fp64;
LIBINT2_REALTYPE fp65;
fp65 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+326)*1+lsi)*1];
target[((hsi*168+102)*1+lsi)*1] = fp65;
LIBINT2_REALTYPE fp66;
fp66 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+325)*1+lsi)*1];
target[((hsi*168+101)*1+lsi)*1] = fp66;
LIBINT2_REALTYPE fp67;
fp67 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+324)*1+lsi)*1];
target[((hsi*168+100)*1+lsi)*1] = fp67;
LIBINT2_REALTYPE fp68;
fp68 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+323)*1+lsi)*1];
target[((hsi*168+99)*1+lsi)*1] = fp68;
LIBINT2_REALTYPE fp69;
fp69 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+322)*1+lsi)*1];
target[((hsi*168+98)*1+lsi)*1] = fp69;
LIBINT2_REALTYPE fp70;
fp70 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+321)*1+lsi)*1];
target[((hsi*168+97)*1+lsi)*1] = fp70;
LIBINT2_REALTYPE fp71;
fp71 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+320)*1+lsi)*1];
target[((hsi*168+96)*1+lsi)*1] = fp71;
LIBINT2_REALTYPE fp41;
fp41 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+406)*1+lsi)*1];
target[((hsi*168+126)*1+lsi)*1] = fp41;
LIBINT2_REALTYPE fp73;
fp73 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+318)*1+lsi)*1];
target[((hsi*168+94)*1+lsi)*1] = fp73;
LIBINT2_REALTYPE fp74;
fp74 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+317)*1+lsi)*1];
target[((hsi*168+93)*1+lsi)*1] = fp74;
LIBINT2_REALTYPE fp75;
fp75 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+316)*1+lsi)*1];
target[((hsi*168+92)*1+lsi)*1] = fp75;
LIBINT2_REALTYPE fp76;
fp76 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+315)*1+lsi)*1];
target[((hsi*168+91)*1+lsi)*1] = fp76;
LIBINT2_REALTYPE fp77;
fp77 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+314)*1+lsi)*1];
target[((hsi*168+90)*1+lsi)*1] = fp77;
LIBINT2_REALTYPE fp78;
fp78 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+313)*1+lsi)*1];
target[((hsi*168+89)*1+lsi)*1] = fp78;
LIBINT2_REALTYPE fp79;
fp79 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+312)*1+lsi)*1];
target[((hsi*168+88)*1+lsi)*1] = fp79;
LIBINT2_REALTYPE fp80;
fp80 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+311)*1+lsi)*1];
target[((hsi*168+87)*1+lsi)*1] = fp80;
LIBINT2_REALTYPE fp81;
fp81 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+310)*1+lsi)*1];
target[((hsi*168+86)*1+lsi)*1] = fp81;
LIBINT2_REALTYPE fp82;
fp82 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+309)*1+lsi)*1];
target[((hsi*168+85)*1+lsi)*1] = fp82;
LIBINT2_REALTYPE fp72;
fp72 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+319)*1+lsi)*1];
target[((hsi*168+95)*1+lsi)*1] = fp72;
LIBINT2_REALTYPE fp42;
fp42 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+405)*1+lsi)*1];
target[((hsi*168+125)*1+lsi)*1] = fp42;
LIBINT2_REALTYPE fp43;
fp43 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+404)*1+lsi)*1];
target[((hsi*168+124)*1+lsi)*1] = fp43;
LIBINT2_REALTYPE fp44;
fp44 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+403)*1+lsi)*1];
target[((hsi*168+123)*1+lsi)*1] = fp44;
LIBINT2_REALTYPE fp45;
fp45 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+402)*1+lsi)*1];
target[((hsi*168+122)*1+lsi)*1] = fp45;
LIBINT2_REALTYPE fp46;
fp46 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+401)*1+lsi)*1];
target[((hsi*168+121)*1+lsi)*1] = fp46;
LIBINT2_REALTYPE fp47;
fp47 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+400)*1+lsi)*1];
target[((hsi*168+120)*1+lsi)*1] = fp47;
LIBINT2_REALTYPE fp48;
fp48 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+399)*1+lsi)*1];
target[((hsi*168+119)*1+lsi)*1] = fp48;
LIBINT2_REALTYPE fp49;
fp49 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+398)*1+lsi)*1];
target[((hsi*168+118)*1+lsi)*1] = fp49;
LIBINT2_REALTYPE fp50;
fp50 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+397)*1+lsi)*1];
target[((hsi*168+117)*1+lsi)*1] = fp50;
LIBINT2_REALTYPE fp62;
fp62 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+329)*1+lsi)*1];
target[((hsi*168+105)*1+lsi)*1] = fp62;
LIBINT2_REALTYPE fp52;
fp52 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+395)*1+lsi)*1];
target[((hsi*168+115)*1+lsi)*1] = fp52;
LIBINT2_REALTYPE fp53;
fp53 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+394)*1+lsi)*1];
target[((hsi*168+114)*1+lsi)*1] = fp53;
LIBINT2_REALTYPE fp54;
fp54 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+393)*1+lsi)*1];
target[((hsi*168+113)*1+lsi)*1] = fp54;
LIBINT2_REALTYPE fp55;
fp55 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+392)*1+lsi)*1];
target[((hsi*168+112)*1+lsi)*1] = fp55;
LIBINT2_REALTYPE fp56;
fp56 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+335)*1+lsi)*1];
target[((hsi*168+111)*1+lsi)*1] = fp56;
LIBINT2_REALTYPE fp57;
fp57 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+334)*1+lsi)*1];
target[((hsi*168+110)*1+lsi)*1] = fp57;
LIBINT2_REALTYPE fp58;
fp58 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+333)*1+lsi)*1];
target[((hsi*168+109)*1+lsi)*1] = fp58;
LIBINT2_REALTYPE fp59;
fp59 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+332)*1+lsi)*1];
target[((hsi*168+108)*1+lsi)*1] = fp59;
LIBINT2_REALTYPE fp60;
fp60 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+331)*1+lsi)*1];
target[((hsi*168+107)*1+lsi)*1] = fp60;
LIBINT2_REALTYPE fp61;
fp61 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+330)*1+lsi)*1];
target[((hsi*168+106)*1+lsi)*1] = fp61;
LIBINT2_REALTYPE fp51;
fp51 = inteval->two_alpha0_ket[vi] * src0[((hsi*504+396)*1+lsi)*1];
target[((hsi*168+116)*1+lsi)*1] = fp51;
}
}
}
const int hsi = 0;
const int lsi = 0;
const int vi = 0;
/** Number of flops = 168 */
}

#ifdef __cplusplus
};
LIBINT_PRAGMA_CLANG(diagnostic pop)
LIBINT_PRAGMA_GCC(diagnostic pop)
#endif
